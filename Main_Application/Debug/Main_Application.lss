
Main_Application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000470  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  000004e4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004e4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000514  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00000550  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001620  00000000  00000000  000006e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ad  00000000  00000000  00001d08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cbc  00000000  00000000  000026b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  00003374  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000740  00000000  00000000  00003604  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000070c  00000000  00000000  00003d44  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  00004450  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a4 36       	cpi	r26, 0x64	; 100
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 36 02 	jmp	0x46c	; 0x46c <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:

int main(void)
{
	while (1)
	{
		for(int i = 20; i >= 0; i--)
  7c:	04 e1       	ldi	r16, 0x14	; 20
  7e:	10 e0       	ldi	r17, 0x00	; 0
  80:	2a c0       	rjmp	.+84     	; 0xd6 <main+0x5a>
		{
			if(i == 20)
  82:	04 31       	cpi	r16, 0x14	; 20
  84:	11 05       	cpc	r17, r1
  86:	39 f4       	brne	.+14     	; 0x96 <main+0x1a>
			{
				LED0_Off();
  88:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LED0_Off>
				LED1_Off();
  8c:	0e 94 17 01 	call	0x22e	; 0x22e <LED1_Off>
				LED2_On();
  90:	0e 94 2c 01 	call	0x258	; 0x258 <LED2_On>
  94:	13 c0       	rjmp	.+38     	; 0xbc <main+0x40>
			}
			else if(i == 5)
  96:	05 30       	cpi	r16, 0x05	; 5
  98:	11 05       	cpc	r17, r1
  9a:	39 f4       	brne	.+14     	; 0xaa <main+0x2e>
			{
				LED0_Off();
  9c:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <LED0_Off>
				LED1_On();
  a0:	0e 94 0f 01 	call	0x21e	; 0x21e <LED1_On>
				LED2_Off();
  a4:	0e 94 34 01 	call	0x268	; 0x268 <LED2_Off>
  a8:	09 c0       	rjmp	.+18     	; 0xbc <main+0x40>
			}
			else if(i == 0)
  aa:	01 15       	cp	r16, r1
  ac:	11 05       	cpc	r17, r1
  ae:	31 f4       	brne	.+12     	; 0xbc <main+0x40>
			{
				LED0_On();
  b0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LED0_On>
				LED1_Off();
  b4:	0e 94 17 01 	call	0x22e	; 0x22e <LED1_Off>
				LED2_Off();
  b8:	0e 94 34 01 	call	0x268	; 0x268 <LED2_Off>
* Author : Belal Hassan
*/
#include <main.h>

int main(void)
{
  bc:	c0 e0       	ldi	r28, 0x00	; 0
  be:	d0 e0       	ldi	r29, 0x00	; 0
  c0:	04 c0       	rjmp	.+8      	; 0xca <main+0x4e>
				LED0_On();
				LED1_Off();
				LED2_Off();
			}
			for(int j = 0; j <= 500; j+=10)
				SevenSegment_Display_Number(i);
  c2:	80 2f       	mov	r24, r16
  c4:	0e 94 b0 00 	call	0x160	; 0x160 <SevenSegment_Display_Number>
			{
				LED0_On();
				LED1_Off();
				LED2_Off();
			}
			for(int j = 0; j <= 500; j+=10)
  c8:	2a 96       	adiw	r28, 0x0a	; 10
  ca:	c5 3f       	cpi	r28, 0xF5	; 245
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	d8 07       	cpc	r29, r24
  d0:	c4 f3       	brlt	.-16     	; 0xc2 <main+0x46>

int main(void)
{
	while (1)
	{
		for(int i = 20; i >= 0; i--)
  d2:	01 50       	subi	r16, 0x01	; 1
  d4:	11 09       	sbc	r17, r1
  d6:	11 23       	and	r17, r17
  d8:	a4 f6       	brge	.-88     	; 0x82 <main+0x6>
  da:	04 e1       	ldi	r16, 0x14	; 20
  dc:	10 e0       	ldi	r17, 0x00	; 0
  de:	0d c0       	rjmp	.+26     	; 0xfa <main+0x7e>
			for(int j = 0; j <= 500; j+=10)
				SevenSegment_Display_Number(i);
		}
		for(int i = 20; i >= 0; i--)
			for(int j = 0; j <= 500; j+=10)
				SevenSegment_Display_Number(i);
  e0:	80 2f       	mov	r24, r16
  e2:	0e 94 b0 00 	call	0x160	; 0x160 <SevenSegment_Display_Number>
			}
			for(int j = 0; j <= 500; j+=10)
				SevenSegment_Display_Number(i);
		}
		for(int i = 20; i >= 0; i--)
			for(int j = 0; j <= 500; j+=10)
  e6:	2a 96       	adiw	r28, 0x0a	; 10
  e8:	02 c0       	rjmp	.+4      	; 0xee <main+0x72>
  ea:	c0 e0       	ldi	r28, 0x00	; 0
  ec:	d0 e0       	ldi	r29, 0x00	; 0
  ee:	c5 3f       	cpi	r28, 0xF5	; 245
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	d8 07       	cpc	r29, r24
  f4:	ac f3       	brlt	.-22     	; 0xe0 <main+0x64>
				LED2_Off();
			}
			for(int j = 0; j <= 500; j+=10)
				SevenSegment_Display_Number(i);
		}
		for(int i = 20; i >= 0; i--)
  f6:	01 50       	subi	r16, 0x01	; 1
  f8:	11 09       	sbc	r17, r1
  fa:	11 23       	and	r17, r17
  fc:	b4 f7       	brge	.-20     	; 0xea <main+0x6e>
  fe:	be cf       	rjmp	.-132    	; 0x7c <main>

00000100 <SevenSegment_Initialize>:
	DIO_SetPinValue(SevenSegment_Control_PORT, SevenSegment_Enable_DP_PIN, SevenSegment_High);
}
void SevenSegment_Disable_DP(void)
{
	SevenSegment_Initialize();
	DIO_SetPinValue(SevenSegment_Control_PORT, SevenSegment_Enable_DP_PIN, SevenSegment_Low);
 100:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 104:	81 11       	cpse	r24, r1
 106:	0b c0       	rjmp	.+22     	; 0x11e <SevenSegment_Initialize+0x1e>
 108:	6e e0       	ldi	r22, 0x0E	; 14
 10a:	81 e0       	ldi	r24, 0x01	; 1
 10c:	0e 94 16 02 	call	0x42c	; 0x42c <DIO_WritePortDirection>
 110:	60 ef       	ldi	r22, 0xF0	; 240
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	0e 94 16 02 	call	0x42c	; 0x42c <DIO_WritePortDirection>
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 11e:	08 95       	ret

00000120 <SevenSegment_Enable_1>:
 120:	0e 94 80 00 	call	0x100	; 0x100 <SevenSegment_Initialize>
 124:	41 e0       	ldi	r20, 0x01	; 1
 126:	61 e0       	ldi	r22, 0x01	; 1
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_SetPinValue>
 12e:	08 95       	ret

00000130 <SevenSegment_Disable_1>:
 130:	0e 94 80 00 	call	0x100	; 0x100 <SevenSegment_Initialize>
 134:	40 e0       	ldi	r20, 0x00	; 0
 136:	61 e0       	ldi	r22, 0x01	; 1
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_SetPinValue>
 13e:	08 95       	ret

00000140 <SevenSegment_Enable_2>:
 140:	0e 94 80 00 	call	0x100	; 0x100 <SevenSegment_Initialize>
 144:	41 e0       	ldi	r20, 0x01	; 1
 146:	62 e0       	ldi	r22, 0x02	; 2
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_SetPinValue>
 14e:	08 95       	ret

00000150 <SevenSegment_Disable_2>:
 150:	0e 94 80 00 	call	0x100	; 0x100 <SevenSegment_Initialize>
 154:	40 e0       	ldi	r20, 0x00	; 0
 156:	62 e0       	ldi	r22, 0x02	; 2
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_SetPinValue>
 15e:	08 95       	ret

00000160 <SevenSegment_Display_Number>:
}
void SevenSegment_Display_Number(u8 number)
{
 160:	cf 93       	push	r28
 162:	c8 2f       	mov	r28, r24
	SevenSegment_Initialize();
 164:	0e 94 80 00 	call	0x100	; 0x100 <SevenSegment_Initialize>
	u8 units = (number % 10) << 4;
 168:	9d ec       	ldi	r25, 0xCD	; 205
 16a:	c9 9f       	mul	r28, r25
 16c:	91 2d       	mov	r25, r1
 16e:	11 24       	eor	r1, r1
 170:	96 95       	lsr	r25
 172:	96 95       	lsr	r25
 174:	96 95       	lsr	r25
 176:	29 2f       	mov	r18, r25
 178:	22 0f       	add	r18, r18
 17a:	82 2f       	mov	r24, r18
 17c:	88 0f       	add	r24, r24
 17e:	88 0f       	add	r24, r24
 180:	82 0f       	add	r24, r18
 182:	6c 2f       	mov	r22, r28
 184:	68 1b       	sub	r22, r24
 186:	62 95       	swap	r22
 188:	60 7f       	andi	r22, 0xF0	; 240
	u8 tenth = (number / 10) << 4;
 18a:	c9 2f       	mov	r28, r25
 18c:	c2 95       	swap	r28
 18e:	c0 7f       	andi	r28, 0xF0	; 240
	DIO_WritePortValue(SevenSegment_Data_PORT, units);
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	0e 94 26 02 	call	0x44c	; 0x44c <DIO_WritePortValue>
	SevenSegment_Enable_1();
 196:	0e 94 90 00 	call	0x120	; 0x120 <SevenSegment_Enable_1>
	SevenSegment_Disable_2();
 19a:	0e 94 a8 00 	call	0x150	; 0x150 <SevenSegment_Disable_2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19e:	8f e1       	ldi	r24, 0x1F	; 31
 1a0:	9e e4       	ldi	r25, 0x4E	; 78
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	f1 f7       	brne	.-4      	; 0x1a2 <SevenSegment_Display_Number+0x42>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <SevenSegment_Display_Number+0x48>
 1a8:	00 00       	nop
	_delay_ms(5);
	DIO_WritePortValue(SevenSegment_Data_PORT, tenth);
 1aa:	6c 2f       	mov	r22, r28
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	0e 94 26 02 	call	0x44c	; 0x44c <DIO_WritePortValue>
	SevenSegment_Enable_2();
 1b2:	0e 94 a0 00 	call	0x140	; 0x140 <SevenSegment_Enable_2>
	SevenSegment_Disable_1();
 1b6:	0e 94 98 00 	call	0x130	; 0x130 <SevenSegment_Disable_1>
 1ba:	8f e1       	ldi	r24, 0x1F	; 31
 1bc:	9e e4       	ldi	r25, 0x4E	; 78
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <SevenSegment_Display_Number+0x5e>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <SevenSegment_Display_Number+0x64>
 1c4:	00 00       	nop
	_delay_ms(5);
}
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <LED0_Initialize>:
#include <LED0_Private.h>

void LED0_Initialize(void)
{
	static bool Initialized = false;
	if(!Initialized)
 1ca:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <Initialized.1807>
 1ce:	81 11       	cpse	r24, r1
 1d0:	08 c0       	rjmp	.+16     	; 0x1e2 <LED0_Initialize+0x18>
	{
		DIO_SetPinDirection(LED0_PORT, LED0, LED0_Output);
 1d2:	41 e0       	ldi	r20, 0x01	; 1
 1d4:	62 e0       	ldi	r22, 0x02	; 2
 1d6:	82 e0       	ldi	r24, 0x02	; 2
 1d8:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_SetPinDirection>
		Initialized = true;
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <Initialized.1807>
 1e2:	08 95       	ret

000001e4 <LED0_On>:
	}
}
void LED0_On(void)
{
	LED0_Initialize();
 1e4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LED0_Initialize>
	DIO_SetPinValue(LED0_PORT, LED0, LED0_High);
 1e8:	41 e0       	ldi	r20, 0x01	; 1
 1ea:	62 e0       	ldi	r22, 0x02	; 2
 1ec:	82 e0       	ldi	r24, 0x02	; 2
 1ee:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_SetPinValue>
 1f2:	08 95       	ret

000001f4 <LED0_Off>:
}
void LED0_Off(void)
{
	LED0_Initialize();
 1f4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LED0_Initialize>
	DIO_SetPinValue(LED0_PORT, LED0, LED0_Low);
 1f8:	40 e0       	ldi	r20, 0x00	; 0
 1fa:	62 e0       	ldi	r22, 0x02	; 2
 1fc:	82 e0       	ldi	r24, 0x02	; 2
 1fe:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_SetPinValue>
 202:	08 95       	ret

00000204 <LED1_Initialize>:
#include <LED1_Private.h>

void LED1_Initialize(void)
{
	static bool Initialized = false;
	if(!Initialized)
 204:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <Initialized.1807>
 208:	81 11       	cpse	r24, r1
 20a:	08 c0       	rjmp	.+16     	; 0x21c <LED1_Initialize+0x18>
	{
		DIO_SetPinDirection(LED1_PORT, LED1, LED1_Output);
 20c:	41 e0       	ldi	r20, 0x01	; 1
 20e:	67 e0       	ldi	r22, 0x07	; 7
 210:	82 e0       	ldi	r24, 0x02	; 2
 212:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_SetPinDirection>
		Initialized = true;
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <Initialized.1807>
 21c:	08 95       	ret

0000021e <LED1_On>:
	}
}
void LED1_On(void)
{
	LED1_Initialize();
 21e:	0e 94 02 01 	call	0x204	; 0x204 <LED1_Initialize>
	DIO_SetPinValue(LED1_PORT, LED1, LED1_High);
 222:	41 e0       	ldi	r20, 0x01	; 1
 224:	67 e0       	ldi	r22, 0x07	; 7
 226:	82 e0       	ldi	r24, 0x02	; 2
 228:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_SetPinValue>
 22c:	08 95       	ret

0000022e <LED1_Off>:
}
void LED1_Off(void)
{
	LED1_Initialize();
 22e:	0e 94 02 01 	call	0x204	; 0x204 <LED1_Initialize>
	DIO_SetPinValue(LED1_PORT, LED1, LED1_Low);
 232:	40 e0       	ldi	r20, 0x00	; 0
 234:	67 e0       	ldi	r22, 0x07	; 7
 236:	82 e0       	ldi	r24, 0x02	; 2
 238:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_SetPinValue>
 23c:	08 95       	ret

0000023e <LED2_Initialize>:
#include <LED2_Private.h>

void LED2_Initialize(void)
{
	static bool Initialized = false;
	if(!Initialized)
 23e:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <Initialized.1807>
 242:	81 11       	cpse	r24, r1
 244:	08 c0       	rjmp	.+16     	; 0x256 <LED2_Initialize+0x18>
	{
		DIO_SetPinDirection(LED2_PORT, LED2, LED2_Output);
 246:	41 e0       	ldi	r20, 0x01	; 1
 248:	63 e0       	ldi	r22, 0x03	; 3
 24a:	83 e0       	ldi	r24, 0x03	; 3
 24c:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_SetPinDirection>
		Initialized = true;
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <Initialized.1807>
 256:	08 95       	ret

00000258 <LED2_On>:
	}
}
void LED2_On(void)
{
	LED2_Initialize();
 258:	0e 94 1f 01 	call	0x23e	; 0x23e <LED2_Initialize>
	DIO_SetPinValue(LED2_PORT, LED2, LED2_High);
 25c:	41 e0       	ldi	r20, 0x01	; 1
 25e:	63 e0       	ldi	r22, 0x03	; 3
 260:	83 e0       	ldi	r24, 0x03	; 3
 262:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_SetPinValue>
 266:	08 95       	ret

00000268 <LED2_Off>:
}
void LED2_Off(void)
{
	LED2_Initialize();
 268:	0e 94 1f 01 	call	0x23e	; 0x23e <LED2_Initialize>
	DIO_SetPinValue(LED2_PORT, LED2, LED2_Low);
 26c:	40 e0       	ldi	r20, 0x00	; 0
 26e:	63 e0       	ldi	r22, 0x03	; 3
 270:	83 e0       	ldi	r24, 0x03	; 3
 272:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_SetPinValue>
 276:	08 95       	ret

00000278 <DIO_SetPinDirection>:
		break;
		case DIO_PORTD:
		if(Status == DIO_Low)
		PORTD = DIO_PORT_Low;
		else
		PORTD = DIO_PORT_High;
 278:	81 30       	cpi	r24, 0x01	; 1
 27a:	01 f1       	breq	.+64     	; 0x2bc <DIO_SetPinDirection+0x44>
 27c:	30 f0       	brcs	.+12     	; 0x28a <DIO_SetPinDirection+0x12>
 27e:	82 30       	cpi	r24, 0x02	; 2
 280:	b1 f1       	breq	.+108    	; 0x2ee <DIO_SetPinDirection+0x76>
 282:	83 30       	cpi	r24, 0x03	; 3
 284:	09 f4       	brne	.+2      	; 0x288 <DIO_SetPinDirection+0x10>
 286:	4c c0       	rjmp	.+152    	; 0x320 <DIO_SetPinDirection+0xa8>
 288:	08 95       	ret
 28a:	41 11       	cpse	r20, r1
 28c:	0c c0       	rjmp	.+24     	; 0x2a6 <DIO_SetPinDirection+0x2e>
 28e:	2a b3       	in	r18, 0x1a	; 26
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	02 c0       	rjmp	.+4      	; 0x29a <DIO_SetPinDirection+0x22>
 296:	88 0f       	add	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	6a 95       	dec	r22
 29c:	e2 f7       	brpl	.-8      	; 0x296 <DIO_SetPinDirection+0x1e>
 29e:	80 95       	com	r24
 2a0:	82 23       	and	r24, r18
 2a2:	8a bb       	out	0x1a, r24	; 26
 2a4:	08 95       	ret
 2a6:	2a b3       	in	r18, 0x1a	; 26
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <DIO_SetPinDirection+0x3a>
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	6a 95       	dec	r22
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <DIO_SetPinDirection+0x36>
 2b6:	82 2b       	or	r24, r18
 2b8:	8a bb       	out	0x1a, r24	; 26
 2ba:	08 95       	ret
 2bc:	41 11       	cpse	r20, r1
 2be:	0c c0       	rjmp	.+24     	; 0x2d8 <DIO_SetPinDirection+0x60>
 2c0:	27 b3       	in	r18, 0x17	; 23
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_SetPinDirection+0x54>
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	6a 95       	dec	r22
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_SetPinDirection+0x50>
 2d0:	80 95       	com	r24
 2d2:	82 23       	and	r24, r18
 2d4:	87 bb       	out	0x17, r24	; 23
 2d6:	08 95       	ret
 2d8:	27 b3       	in	r18, 0x17	; 23
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <DIO_SetPinDirection+0x6c>
 2e0:	88 0f       	add	r24, r24
 2e2:	99 1f       	adc	r25, r25
 2e4:	6a 95       	dec	r22
 2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <DIO_SetPinDirection+0x68>
 2e8:	82 2b       	or	r24, r18
 2ea:	87 bb       	out	0x17, r24	; 23
 2ec:	08 95       	ret
 2ee:	41 11       	cpse	r20, r1
 2f0:	0c c0       	rjmp	.+24     	; 0x30a <DIO_SetPinDirection+0x92>
 2f2:	24 b3       	in	r18, 0x14	; 20
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <DIO_SetPinDirection+0x86>
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	6a 95       	dec	r22
 300:	e2 f7       	brpl	.-8      	; 0x2fa <DIO_SetPinDirection+0x82>
 302:	80 95       	com	r24
 304:	82 23       	and	r24, r18
 306:	84 bb       	out	0x14, r24	; 20
 308:	08 95       	ret
 30a:	24 b3       	in	r18, 0x14	; 20
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	02 c0       	rjmp	.+4      	; 0x316 <DIO_SetPinDirection+0x9e>
 312:	88 0f       	add	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	6a 95       	dec	r22
 318:	e2 f7       	brpl	.-8      	; 0x312 <DIO_SetPinDirection+0x9a>
 31a:	82 2b       	or	r24, r18
 31c:	84 bb       	out	0x14, r24	; 20
 31e:	08 95       	ret
 320:	41 11       	cpse	r20, r1
 322:	0c c0       	rjmp	.+24     	; 0x33c <DIO_SetPinDirection+0xc4>
 324:	21 b3       	in	r18, 0x11	; 17
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	02 c0       	rjmp	.+4      	; 0x330 <DIO_SetPinDirection+0xb8>
 32c:	88 0f       	add	r24, r24
 32e:	99 1f       	adc	r25, r25
 330:	6a 95       	dec	r22
 332:	e2 f7       	brpl	.-8      	; 0x32c <DIO_SetPinDirection+0xb4>
 334:	80 95       	com	r24
 336:	82 23       	and	r24, r18
 338:	81 bb       	out	0x11, r24	; 17
 33a:	08 95       	ret
 33c:	21 b3       	in	r18, 0x11	; 17
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	02 c0       	rjmp	.+4      	; 0x348 <DIO_SetPinDirection+0xd0>
 344:	88 0f       	add	r24, r24
 346:	99 1f       	adc	r25, r25
 348:	6a 95       	dec	r22
 34a:	e2 f7       	brpl	.-8      	; 0x344 <DIO_SetPinDirection+0xcc>
 34c:	82 2b       	or	r24, r18
 34e:	81 bb       	out	0x11, r24	; 17
 350:	08 95       	ret

00000352 <DIO_SetPinValue>:
 352:	81 30       	cpi	r24, 0x01	; 1
 354:	01 f1       	breq	.+64     	; 0x396 <DIO_SetPinValue+0x44>
 356:	30 f0       	brcs	.+12     	; 0x364 <DIO_SetPinValue+0x12>
 358:	82 30       	cpi	r24, 0x02	; 2
 35a:	b1 f1       	breq	.+108    	; 0x3c8 <DIO_SetPinValue+0x76>
 35c:	83 30       	cpi	r24, 0x03	; 3
 35e:	09 f4       	brne	.+2      	; 0x362 <DIO_SetPinValue+0x10>
 360:	4c c0       	rjmp	.+152    	; 0x3fa <DIO_SetPinValue+0xa8>
 362:	08 95       	ret
 364:	41 11       	cpse	r20, r1
 366:	0c c0       	rjmp	.+24     	; 0x380 <DIO_SetPinValue+0x2e>
 368:	2b b3       	in	r18, 0x1b	; 27
 36a:	81 e0       	ldi	r24, 0x01	; 1
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	02 c0       	rjmp	.+4      	; 0x374 <DIO_SetPinValue+0x22>
 370:	88 0f       	add	r24, r24
 372:	99 1f       	adc	r25, r25
 374:	6a 95       	dec	r22
 376:	e2 f7       	brpl	.-8      	; 0x370 <DIO_SetPinValue+0x1e>
 378:	80 95       	com	r24
 37a:	82 23       	and	r24, r18
 37c:	8b bb       	out	0x1b, r24	; 27
 37e:	08 95       	ret
 380:	2b b3       	in	r18, 0x1b	; 27
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	02 c0       	rjmp	.+4      	; 0x38c <DIO_SetPinValue+0x3a>
 388:	88 0f       	add	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	6a 95       	dec	r22
 38e:	e2 f7       	brpl	.-8      	; 0x388 <DIO_SetPinValue+0x36>
 390:	82 2b       	or	r24, r18
 392:	8b bb       	out	0x1b, r24	; 27
 394:	08 95       	ret
 396:	41 11       	cpse	r20, r1
 398:	0c c0       	rjmp	.+24     	; 0x3b2 <DIO_SetPinValue+0x60>
 39a:	28 b3       	in	r18, 0x18	; 24
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <DIO_SetPinValue+0x54>
 3a2:	88 0f       	add	r24, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	6a 95       	dec	r22
 3a8:	e2 f7       	brpl	.-8      	; 0x3a2 <DIO_SetPinValue+0x50>
 3aa:	80 95       	com	r24
 3ac:	82 23       	and	r24, r18
 3ae:	88 bb       	out	0x18, r24	; 24
 3b0:	08 95       	ret
 3b2:	28 b3       	in	r18, 0x18	; 24
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <DIO_SetPinValue+0x6c>
 3ba:	88 0f       	add	r24, r24
 3bc:	99 1f       	adc	r25, r25
 3be:	6a 95       	dec	r22
 3c0:	e2 f7       	brpl	.-8      	; 0x3ba <DIO_SetPinValue+0x68>
 3c2:	82 2b       	or	r24, r18
 3c4:	88 bb       	out	0x18, r24	; 24
 3c6:	08 95       	ret
 3c8:	41 11       	cpse	r20, r1
 3ca:	0c c0       	rjmp	.+24     	; 0x3e4 <DIO_SetPinValue+0x92>
 3cc:	25 b3       	in	r18, 0x15	; 21
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <DIO_SetPinValue+0x86>
 3d4:	88 0f       	add	r24, r24
 3d6:	99 1f       	adc	r25, r25
 3d8:	6a 95       	dec	r22
 3da:	e2 f7       	brpl	.-8      	; 0x3d4 <DIO_SetPinValue+0x82>
 3dc:	80 95       	com	r24
 3de:	82 23       	and	r24, r18
 3e0:	85 bb       	out	0x15, r24	; 21
 3e2:	08 95       	ret
 3e4:	25 b3       	in	r18, 0x15	; 21
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <DIO_SetPinValue+0x9e>
 3ec:	88 0f       	add	r24, r24
 3ee:	99 1f       	adc	r25, r25
 3f0:	6a 95       	dec	r22
 3f2:	e2 f7       	brpl	.-8      	; 0x3ec <DIO_SetPinValue+0x9a>
 3f4:	82 2b       	or	r24, r18
 3f6:	85 bb       	out	0x15, r24	; 21
 3f8:	08 95       	ret
 3fa:	41 11       	cpse	r20, r1
 3fc:	0c c0       	rjmp	.+24     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 3fe:	22 b3       	in	r18, 0x12	; 18
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	02 c0       	rjmp	.+4      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 406:	88 0f       	add	r24, r24
 408:	99 1f       	adc	r25, r25
 40a:	6a 95       	dec	r22
 40c:	e2 f7       	brpl	.-8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 40e:	80 95       	com	r24
 410:	82 23       	and	r24, r18
 412:	82 bb       	out	0x12, r24	; 18
 414:	08 95       	ret
 416:	22 b3       	in	r18, 0x12	; 18
 418:	81 e0       	ldi	r24, 0x01	; 1
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	02 c0       	rjmp	.+4      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	6a 95       	dec	r22
 424:	e2 f7       	brpl	.-8      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 426:	82 2b       	or	r24, r18
 428:	82 bb       	out	0x12, r24	; 18
 42a:	08 95       	ret

0000042c <DIO_WritePortDirection>:
		break;
	}
}
void DIO_WritePortDirection(port Port, u8 Status)
{
	switch(Port)
 42c:	81 30       	cpi	r24, 0x01	; 1
 42e:	41 f0       	breq	.+16     	; 0x440 <DIO_WritePortDirection+0x14>
 430:	28 f0       	brcs	.+10     	; 0x43c <DIO_WritePortDirection+0x10>
 432:	82 30       	cpi	r24, 0x02	; 2
 434:	39 f0       	breq	.+14     	; 0x444 <DIO_WritePortDirection+0x18>
 436:	83 30       	cpi	r24, 0x03	; 3
 438:	39 f0       	breq	.+14     	; 0x448 <DIO_WritePortDirection+0x1c>
 43a:	08 95       	ret
	{
		case DIO_PORTA:
		DDRA = Status;
 43c:	6a bb       	out	0x1a, r22	; 26
		break;
 43e:	08 95       	ret
		case DIO_PORTB:
		DDRB = Status;
 440:	67 bb       	out	0x17, r22	; 23
		break;
 442:	08 95       	ret
		case DIO_PORTC:
		DDRC = Status;
 444:	64 bb       	out	0x14, r22	; 20
		break;
 446:	08 95       	ret
		case DIO_PORTD:
		DDRD = Status;
 448:	61 bb       	out	0x11, r22	; 17
 44a:	08 95       	ret

0000044c <DIO_WritePortValue>:
		break;
	}
}
void DIO_WritePortValue(port Port, u8 Status)
{
	switch(Port)
 44c:	81 30       	cpi	r24, 0x01	; 1
 44e:	41 f0       	breq	.+16     	; 0x460 <DIO_WritePortValue+0x14>
 450:	28 f0       	brcs	.+10     	; 0x45c <DIO_WritePortValue+0x10>
 452:	82 30       	cpi	r24, 0x02	; 2
 454:	39 f0       	breq	.+14     	; 0x464 <DIO_WritePortValue+0x18>
 456:	83 30       	cpi	r24, 0x03	; 3
 458:	39 f0       	breq	.+14     	; 0x468 <DIO_WritePortValue+0x1c>
 45a:	08 95       	ret
	{
		case DIO_PORTA:
		PORTA = Status;
 45c:	6b bb       	out	0x1b, r22	; 27
		break;
 45e:	08 95       	ret
		case DIO_PORTB:
		PORTB = Status;
 460:	68 bb       	out	0x18, r22	; 24
		break;
 462:	08 95       	ret
		case DIO_PORTC:
		PORTC = Status;
 464:	65 bb       	out	0x15, r22	; 21
		break;
 466:	08 95       	ret
		case DIO_PORTD:
		PORTD = Status;
 468:	62 bb       	out	0x12, r22	; 18
 46a:	08 95       	ret

0000046c <_exit>:
 46c:	f8 94       	cli

0000046e <__stop_program>:
 46e:	ff cf       	rjmp	.-2      	; 0x46e <__stop_program>
